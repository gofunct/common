package ui

type Opt struct {
	ID        int
	Text      string
	Value     interface{}
	function  func(Opt) error
	isDefault bool
}

func NewOption(id int, text string, value interface{}, def bool, function func(Opt) error) *Opt {
	return &Opt{
		ID:        id,
		Text:      text,
		Value:     value,
		isDefault: def,
		function:  function,
	}
}

func AllMenus() []*Menu {
	menus := []*Menu{
		{
			Question:       "What cloud provider would you like to use?",
			Function:       nil,
			Options:        nil,
			UI:             nil,
			MultiSeparator: "",
			AllowMultipleQ: false,
			LoopOnInvalidA: false,
			Clear:          false,
			Tries:          0,
			DefIcon:        "",
			IsYN:           false,
			YNDef:          0,
		},
		{
			Question:       "Have you signed up, downloaded your cloud providers cli tool, and logged in?",
			Function:       nil,
			Options:        nil,
			UI:             nil,
			MultiSeparator: "",
			AllowMultipleQ: false,
			LoopOnInvalidA: false,
			Clear:          false,
			Tries:          0,
			DefIcon:        "",
			IsYN:           true,
			YNDef:          0,
		},
		{
			Question:       "What is the version of the app youre making?",
			Function:       nil,
			Options:        nil,
			UI:             nil,
			MultiSeparator: "",
			AllowMultipleQ: false,
			LoopOnInvalidA: false,
			Clear:          false,
			Tries:          0,
			DefIcon:        "",
			IsYN:           false,
			YNDef:          0,
		},
		{
			Question:       "What is the name of your app?",
			Function:       nil,
			Options:        nil,
			UI:             nil,
			MultiSeparator: "",
			AllowMultipleQ: false,
			LoopOnInvalidA: false,
			Clear:          false,
			Tries:          0,
			DefIcon:        "",
			IsYN:           false,
			YNDef:          0,
		},
		{
			Question:       "What is the name of your service?",
			Function:       nil,
			Options:        nil,
			UI:             nil,
			MultiSeparator: "",
			AllowMultipleQ: false,
			LoopOnInvalidA: false,
			Clear:          false,
			Tries:          0,
			DefIcon:        "",
			IsYN:           false,
			YNDef:          0,
		},
		{
			Question:       "What is the name of your service?",
			Function:       nil,
			Options:        nil,
			UI:             nil,
			MultiSeparator: "",
			AllowMultipleQ: false,
			LoopOnInvalidA: false,
			Clear:          false,
			Tries:          0,
			DefIcon:        "",
			IsYN:           false,
			YNDef:          0,
		},
		{
			Question:       "What is your dockerhub username?",
			Function:       nil,
			Options:        nil,
			UI:             nil,
			MultiSeparator: "",
			AllowMultipleQ: false,
			LoopOnInvalidA: false,
			Clear:          false,
			Tries:          0,
			DefIcon:        "",
			IsYN:           false,
			YNDef:          0,
		},
		{
			Question:       "Go mod or go vendor?",
			Function:       nil,
			Options:        nil,
			UI:             nil,
			MultiSeparator: "",
			AllowMultipleQ: false,
			LoopOnInvalidA: false,
			Clear:          false,
			Tries:          0,
			DefIcon:        "",
			IsYN:           true,
			YNDef:          0,
		},
		{
			Question:       "Go mod or go vendor?",
			Function:       nil,
			Options:        nil,
			UI:             nil,
			MultiSeparator: "",
			AllowMultipleQ: false,
			LoopOnInvalidA: false,
			Clear:          false,
			Tries:          0,
			DefIcon:        "",
			IsYN:           true,
			YNDef:          0,
		},
		{
			Question:       "Go mod or go vendor?",
			Function:       nil,
			Options:        nil,
			UI:             nil,
			MultiSeparator: "",
			AllowMultipleQ: false,
			LoopOnInvalidA: false,
			Clear:          false,
			Tries:          0,
			DefIcon:        "",
			IsYN:           true,
			YNDef:          0,
		},

	}
	return menus
}